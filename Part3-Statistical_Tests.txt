YNW RAPTOR - EDA and Statistical Analysis of Post Rehabilitation Read Me File

Overview:
This code conducts exploratory data analysis (EDA) and statistical testing on the movement variables of three rehabilitated red-tailed hawks named Maverick, Moe, and McDonnell. The analysis includes data import, creation of new features, EDA for each bird's movement, and statistical significance testing on their movement variables.

Contents:

Section 1: Import Data:
The code imports data from the provided CSV files for analysis.

Section 2: Exploratory Data Analysis:
Conducts exploratory analysis for each bird separately (Maverick, Moe, McDonnell):
Creates new features like season, time of the day, and year-month for temporal analysis.
Plots event counts by year-month for Maverick and Moe.
Generates correlation heatmaps for movement variables for Maverick and Moe.
Analyzes average movement by season and time of the day for Maverick and Moe.

Section 3:Statistical Significance Testing:
Conducts statistical tests like Kruskal-Wallis and Wilcoxon tests for each bird's movement variables (speed, heading, altitude, etc.) across different seasons or time periods.

Usage Instructions:

Data Import:
Ensure the paths to the CSV files are correctly specified or replace them with the appropriate file paths.
Exploratory Data Analysis:
Run the code sections under each bird's section (Maverick, Moe, McDonnell) to visualize their movement patterns.

Statistical Significance Testing:
Execute the code sections to conduct statistical tests on movement variables for each bird.

Interpretation:
Review statistical test results to understand if there's a significant difference in movement variables across seasons or time periods.

Notes:
Dependencies: The code utilizes Python and several libraries such as Pandas, Matplotlib, Seaborn, and Scipy. Ensure these libraries are installed in the Python environment before running the code.

Data Preparation: The provided code assumes the CSV files contain the necessary columns for analysis. Ensure the data format matches the expected structure for the code to run correctly.